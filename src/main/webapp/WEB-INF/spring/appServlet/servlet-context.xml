<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:task="http://www.springframework.org/schema/task"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.2.xsd"
        >

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/"/>


    <!-- Tiles 환경설정 파일  -->
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>classpath:tiles/tiles-def.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- jsonView -->
    <beans:bean id="jsonViewer" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
        <beans:property name="extractValueFromSingleKeyModel" value="true"/>
    </beans:bean>

    <!-- jsonpView -->
    <beans:bean id="jsonpViewer" class="com.juseyo.commons.lib.resolver.jsonp.MappingJacksonJsonpView">
        <beans:property name="extractValueFromSingleKeyModel" value="true"/>
    </beans:bean>

    <!-- xmlView -->
    <beans:bean id="xmlViewer" class="com.juseyo.commons.lib.resolver.xml.MappingXmlView">
    </beans:bean>

    <!-- excelDownload -->
    <beans:bean id="excelDownload" class="com.juseyo.commons.lib.resolver.excel.MappingExcelDownload">
    </beans:bean>

    <!-- excelView -->
    <beans:bean id="excelViewer" class="com.juseyo.commons.lib.resolver.excel.MappingExcelView">
    </beans:bean>

    <!-- Resolver 1st -->
    <beans:bean id="bnViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <beans:property name="order" value="1"/>
    </beans:bean>


    <!-- Resolver 2nd -->
    <beans:bean id="tilesViewResolver" class="org.springbyexample.web.servlet.view.tiles2.TilesUrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springbyexample.web.servlet.view.tiles2.DynamicTilesView"/>
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
        <beans:property name="tilesDefinitionName" value="default"/>
        <beans:property name="tilesBodyAttributeName" value="body"/>
        <beans:property name="tilesDefinitionDelimiter" value="."/>
        <beans:property name="order" value="2"/>
    </beans:bean>

    <!-- Resolver 3rd -->
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
        <beans:property name="order" value="3"/>
    </beans:bean>

    <!-- Resolver 4rd -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 최대 파일 업로드 용량 제한(100MB) -->
        <beans:property name="maxUploadSize" value="104857600"/>
        <!-- 파일명 인코딩 -->
        <beans:property name="defaultEncoding" value="UTF-8"></beans:property>
        <!--<beans:property name="uploadTempDir" ref="uploadDirResource"></beans:property>-->
    </beans:bean>

    <!--<beans:bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">-->
    <!--<beans:constructor-arg>-->
    <!--<beans:value>/data/upload/temp</beans:value>-->
    <!--</beans:constructor-arg>-->
    <!--</beans:bean>-->

    <!-- Resolver 0 -->
    <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <beans:property name="order" value="0"/>
        <beans:property name="defaultContentType" value="text/html;charset=UTF-8" />
        <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="do" value="text/html;charset=UTF-8" />
                <beans:entry key="pop" value="text/html;charset=UTF-8" />
                <beans:entry key="json" value="application/json"/>
                <beans:entry key="jsonp" value="application/javascript"/>
                <beans:entry key="xml" value="application/xml"/>
            </beans:map>
        </beans:property>

        <beans:property name="viewResolvers">
            <beans:list>
                <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
                <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
                    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
                </beans:bean>
            </beans:list>
        </beans:property>

        <beans:property name="defaultViews">
            <beans:list>
                <beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                    <beans:property name="extractValueFromSingleKeyModel" value="true"/>
                    <beans:property name="contentType" value="application/json"/>
                </beans:bean>

                <beans:bean class="com.juseyo.commons.lib.resolver.jsonp.MappingJacksonJsonpView">
                    <beans:property name="extractValueFromSingleKeyModel" value="true"/>
                    <beans:property name="contentType" value="application/javascript"/>
                </beans:bean>

                <beans:bean class="com.juseyo.commons.lib.resolver.xml.MappingXmlView">
                    <beans:property name="contentType" value="application/xml"/>
                </beans:bean>
            </beans:list>
        </beans:property>

        <beans:property name="ignoreAcceptHeader" value="true"/>
    </beans:bean>
    <aop:aspectj-autoproxy/>
    <!--
    <beans:bean class="com.juseyo.commons.lib.interceptor.ThrowingCommonInterceptor"/>
    <beans:bean class="com.juseyo.commons.lib.interceptor.ThrowingAlphaInterceptor" />
    <beans:bean class="com.juseyo.commons.lib.interceptor.ThrowingBravoInterceptor" />
     -->
    <beans:bean class="com.juseyo.commons.lib.interceptor.ThrowingInterceptor"/>
    <!--<beans:bean class="com.juseyo.commons.lib.interceptor.PermissionInterceptor"/>-->
    <beans:bean class="com.juseyo.commons.lib.interceptor.RequestInterceptor"/>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <interceptors>
        <interceptor>
            <mapping path="/**/*"/>
            <exclude-mapping path="/resources/**"/>
            <beans:bean class="com.juseyo.certification.interceptor.CertificationInterceptor"/>
        </interceptor>
    </interceptors>

    <context:component-scan base-package="com.juseyo"/>
    <context:property-placeholder location="classpath:dev.gos.properties"/>

</beans:beans>
